{
  "library/browsercontext-basic.spec.ts > should not hang on promises after disabling javascript": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should work @smoke": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should support clicking": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should scroll to click": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should scroll twice when emulated": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should reset scroll top after a navigation": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should scroll to a precise position with mobile scale": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-device.spec.ts > device > should emulate viewport and screen size": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-device.spec.ts > device > should emulate viewport without screen size": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-events.spec.ts > console event should work in popup 2": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-events.spec.ts > console event should work in immediately closed popup": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-har.spec.ts > should change document URL after redirected navigation": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should goBack to redirected navigation": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should goForward to redirected navigation": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should reload redirected navigation": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should record overridden requests to har": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should ignore boundary when matching multipart/form-data body": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-pages.spec.ts > should click the button with offset with page scale": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-pages.spec.ts > should return bounding box with page scale": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support mobile emulation": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support touch emulation": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should be detectable": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should detect touch when applying viewport with touches": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support landscape emulation": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support window.orientation emulation": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should fire orientationchange event": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > default mobile viewports to 980 width": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > respect meta viewport tag": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should emulate the hover media feature": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > mouse should work with mobile viewports and cross process navigations": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should scroll when emulating a mobile viewport": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should scroll mobile page with background-attachment: fixed": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > view scale should reset after navigation": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsercontext-viewport.spec.ts > should set window.screen.orientation.type for mobile devices": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/browsertype-launch.spec.ts > should throw if page argument is passed": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/debug-controller.spec.ts > should record": {
    "previous": "failed",
    "current": "passed"
  },
  "library/defaultbrowsercontext-2.spec.ts > should support geolocation and permissions options": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/defaultbrowsercontext-2.spec.ts > should throw if page argument is passed": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/defaultbrowsercontext-2.spec.ts > should handle exception": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/emulation-focus.spec.ts > should trigger hover state concurrently": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/geolocation.spec.ts > should work @smoke": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/geolocation.spec.ts > should isolate contexts": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/geolocation.spec.ts > should use context options": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/geolocation.spec.ts > watchPosition should be notified": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/geolocation.spec.ts > should use context options for popup": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/headful.spec.ts > should click bottom row w/ infobar in OOPIF": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/headful.spec.ts > headless and headful should use same default fonts": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/page-clock.spec.ts > popup > should tick after popup": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/page-clock.spec.ts > popup > should tick before popup": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/page-clock.spec.ts > popup > should run time before popup": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/popup.spec.ts > should use viewport size from window features": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/popup.spec.ts > BrowserContext.addInitScript should apply to a cross-process popup": {
    "previous": "passed",
    "current": "failed"
  },
  "library/resource-timing.spec.ts > should work when serving from memory cache": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/screenshot.spec.ts > element screenshot > element screenshot should work with a mobile viewport": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/screenshot.spec.ts > element screenshot > element screenshot should work with device scale factor": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should serve css without content-type": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should show only one pointer with multilevel iframes": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/unit/clock.spec.ts > works with concurrent runFor calls": {
    "previous": "passed"
  },
  "library/video.spec.ts > screencast > saveAs should throw when no video frames": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/frame-goto.spec.ts > should continue after client redirect": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-event-load.spec.ts > should fire once": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-event-load.spec.ts > should fire once with iframe navigation": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-event-request.spec.ts > should report navigation requests and responses handled by service worker": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-event-request.spec.ts > should report navigation requests and responses handled by service worker with routing": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-fill.spec.ts > should fill contenteditable with new lines": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-focus.spec.ts > should work @smoke": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-goto.spec.ts > should not resolve goto upon window.stop()": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-history.spec.ts > regression test for issue 20791": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-network-request.spec.ts > page.reload return 304 status code": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-screenshot.spec.ts > page screenshot > should work for webgl": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/page-screenshot.spec.ts > page screenshot animations > should wait for fonts to load": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-response.spec.ts > should work with re-rendered cached IMG elements": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/wheel.spec.ts > should dispatch wheel events after context menu was opened": {
    "previous": "skipped",
    "current": "passed"
  },
  "page/workers.spec.ts > should report errors": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/unit/clock.spec.ts > fastForward > does not rewind back in time": {
    "current": "passed"
  },
  "library/unit/clock.spec.ts > fastForward > error does not break the clock": {
    "current": "passed"
  }
}
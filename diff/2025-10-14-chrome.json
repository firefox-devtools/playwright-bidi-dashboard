{
  "library/beforeunload.spec.ts > should be able to navigate away from page with beforeunload": {
    "previous": "passed",
    "current": "failed"
  },
  "library/beforeunload.spec.ts > should close page with beforeunload listener": {
    "previous": "failed",
    "current": "passed"
  },
  "library/beforeunload.spec.ts > should support dismissing the dialog multiple times": {
    "previous": "passed",
    "current": "failed"
  },
  "library/beforeunload.spec.ts > should support closing the page after a previous dismiss": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-add-cookies.spec.ts > should set multiple cookies": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-add-cookies.spec.ts > should default to setting secure cookie for HTTPS websites": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-add-cookies.spec.ts > should set cookies for a frame": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-add-init-script.spec.ts > should work with browser context scripts with a path": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-base-url.spec.ts > should construct a new URL when a baseURL in browser.newContext is passed to page.goto @smoke": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-base-url.spec.ts > should construct the URLs correctly when a baseURL with a trailing slash in browser.newPage is passed to page.goto": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-base-url.spec.ts > should not construct a new URL when valid URLs are passed": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-basic.spec.ts > should isolate localStorage and cookies @smoke": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-har.spec.ts > should round-trip har.zip": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should produce extracted zip": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-har.spec.ts > should round-trip extracted har.zip": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > should update har.zip for context": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-har.spec.ts > should ignore boundary when matching multipart/form-data body": {
    "previous": "passed",
    "current": "timedOut"
  },
  "library/browsercontext-har.spec.ts > should update har.zip for page": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-har.spec.ts > should update extracted har.zip for page": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-har.spec.ts > context.unrouteAll should stop context.routeFromHAR": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-locale.spec.ts > should format date": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-locale.spec.ts > should affect Intl.DateTimeFormat().resolvedOptions().locale": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-page-event.spec.ts > should work with Ctrl-clicking": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-pages.spec.ts > should return bounding box with page scale": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-proxy.spec.ts > should use socks proxy": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsertype-connect.spec.ts > run-server > socks proxy > should proxy ipv6 localhost requests @smoke": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsertype-connect.spec.ts > run-server > socks proxy > should proxy based on the pattern": {
    "previous": "passed",
    "current": "failed"
  },
  "library/capabilities.spec.ts > should respect CSP @smoke": {
    "previous": "passed",
    "current": "failed"
  },
  "library/capabilities.spec.ts > serviceWorker should intercept document request": {
    "previous": "failed",
    "current": "passed"
  },
  "library/capabilities.spec.ts > window.GestureEvent in WebKit": {
    "previous": "failed",
    "current": "passed"
  },
  "library/capabilities.spec.ts > should be able to render avif images": {
    "previous": "passed",
    "current": "failed"
  },
  "library/emulation-focus.spec.ts > should change focused iframe": {
    "previous": "passed",
    "current": "failed"
  },
  "library/har.spec.ts > should have version and creator": {
    "previous": "failed",
    "current": "passed"
  },
  "library/har.spec.ts > should skip invalid Expires": {
    "previous": "failed",
    "current": "passed"
  },
  "library/har.spec.ts > should use attach mode for zip extension": {
    "previous": "passed",
    "current": "failed"
  },
  "library/har.spec.ts > should calculate time": {
    "previous": "failed",
    "current": "passed"
  },
  "library/har.spec.ts > should not hang on resources served from cache": {
    "previous": "passed",
    "current": "failed"
  },
  "library/hit-target.spec.ts > should block all events when hit target is wrong": {
    "previous": "failed",
    "current": "passed"
  },
  "library/hit-target.spec.ts > should block all events when hit target is wrong and element detaches": {
    "previous": "failed",
    "current": "passed"
  },
  "library/hit-target.spec.ts > should work with mui select": {
    "previous": "passed",
    "current": "failed"
  },
  "library/hit-target.spec.ts > should work with block-block-block inside inline-inline": {
    "previous": "passed",
    "current": "failed"
  },
  "library/hit-target.spec.ts > should not click iframe overlaying the target": {
    "previous": "failed",
    "current": "passed"
  },
  "library/multiclient.spec.ts > should connect two clients": {
    "previous": "failed",
    "current": "passed"
  },
  "library/multiclient.spec.ts > should unroute websockets": {
    "previous": "failed",
    "current": "passed"
  },
  "library/page-close.spec.ts > should not treat navigations as new popups": {
    "previous": "passed",
    "current": "failed"
  },
  "library/permissions.spec.ts > permissions > should prompt for geolocation permission when origin is not listed": {
    "previous": "failed",
    "current": "passed"
  },
  "library/popup.spec.ts > should not throttle rAF in the opener page": {
    "previous": "timedOut",
    "current": "failed"
  },
  "library/popup.spec.ts > should not throw when click closes popup": {
    "previous": "failed",
    "current": "passed"
  },
  "library/proxy.spec.ts > should exclude patterns": {
    "previous": "failed",
    "current": "passed"
  },
  "library/proxy.spec.ts > should use socks proxy in second page": {
    "previous": "passed",
    "current": "failed"
  },
  "library/proxy.spec.ts > should proxy local network requests > by default > loopback address": {
    "previous": "passed",
    "current": "failed"
  },
  "library/proxy.spec.ts > should proxy local network requests > with other bypasses > loopback address": {
    "previous": "failed",
    "current": "passed"
  },
  "library/role-utils.spec.ts > wpt accname #2": {
    "previous": "passed",
    "current": "failed"
  },
  "library/role-utils.spec.ts > wpt accname non-manual": {
    "previous": "failed",
    "current": "passed"
  },
  "library/role-utils.spec.ts > svg role=presentation": {
    "previous": "failed",
    "current": "passed"
  },
  "library/route-web-socket.spec.ts > no-mock > should work with text message": {
    "previous": "failed",
    "current": "passed"
  },
  "library/route-web-socket.spec.ts > no-mock > should work with binaryType=arraybuffer": {
    "previous": "failed",
    "current": "passed"
  },
  "library/signals.spec.ts > signals > should report browser close signal 2": {
    "previous": "timedOut",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should preserve noscript when javascript is disabled": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should remove noscript by default": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should remove noscript when javaScriptEnabled is set to true": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should open snapshot in new browser context": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/trace-viewer.spec.ts > should show similar actions from legacy library-only trace": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should show correct request start time": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should not record route actions": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should not record network actions": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should show baseURL in metadata pane": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should not leak recorders": {
    "previous": "skipped",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > canvas disabled title": {
    "previous": "skipped",
    "current": "failed"
  },
  "library/trace-viewer.spec.ts > canvas clipping": {
    "previous": "skipped",
    "current": "timedOut"
  },
  "library/trace-viewer.spec.ts > canvas clipping in iframe": {
    "previous": "skipped",
    "current": "failed"
  },
  "page/elementhandle-click.spec.ts > should double click the button": {
    "previous": "failed",
    "current": "passed"
  },
  "page/elementhandle-convenience.spec.ts > should have a nice preview for non-ascii attributes/children": {
    "previous": "failed",
    "current": "passed"
  },
  "page/elementhandle-convenience.spec.ts > textContent should work": {
    "previous": "failed",
    "current": "passed"
  },
  "page/elementhandle-misc.spec.ts > should select single option": {
    "previous": "passed",
    "current": "failed"
  },
  "page/elementhandle-owner-frame.spec.ts > should work": {
    "previous": "failed",
    "current": "passed"
  },
  "page/elementhandle-query-selector.spec.ts > should query existing element": {
    "previous": "failed",
    "current": "passed"
  },
  "page/elementhandle-wait-for-element-state.spec.ts > should wait for stable position": {
    "previous": "passed",
    "current": "failed"
  },
  "page/expect-boolean.spec.ts > toBeAttached > over navigation": {
    "previous": "failed",
    "current": "passed"
  },
  "page/frame-evaluate.spec.ts > should have correct execution contexts @smoke": {
    "previous": "failed",
    "current": "passed"
  },
  "page/frame-frame-element.spec.ts > should work with contentFrame": {
    "previous": "passed",
    "current": "failed"
  },
  "page/frame-frame-element.spec.ts > should work with frameset": {
    "previous": "failed",
    "current": "passed"
  },
  "page/frame-goto.spec.ts > should return matching responses": {
    "previous": "passed",
    "current": "failed"
  },
  "page/locator-convenience.spec.ts > should have a nice preview": {
    "previous": "passed",
    "current": "failed"
  },
  "page/locator-convenience.spec.ts > getAttribute should work": {
    "previous": "failed",
    "current": "passed"
  },
  "page/locator-query.spec.ts > should enforce same frame for has/leftOf/rightOf/above/below/near": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-add-locator-handler.spec.ts > should work with toBeVisible": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-add-locator-handler.spec.ts > should wait for hidden by default 2": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-add-locator-handler.spec.ts > should work with noWaitAfter": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-add-script-tag.spec.ts > should work with a url": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-add-script-tag.spec.ts > should work with a path and type=module": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-add-style-tag.spec.ts > should throw an error if loading from url fail": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-add-style-tag.spec.ts > should throw when added with content to the CSP page": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should stitch all frame snapshots": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should auto-wait for navigation": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-autowaiting-no-hang.spec.ts > calling window.open and window.close": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-autowaiting-no-hang.spec.ts > opening a popup": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-autowaiting-no-hang.spec.ts > clicking in the middle of navigation that commits": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-autowaiting-no-hang.spec.ts > goBack in the middle of navigation that commits": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click-timeout-2.spec.ts > should timeout waiting for display:none to be gone": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click-timeout-2.spec.ts > should timeout waiting for visibility:hidden to be gone": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > should click button inside frameset": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click the button after navigation ": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > should select the text by triple clicking": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click on checkbox input and toggle": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > should click on checkbox label and toggle": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should scroll and click the button with smooth scroll behavior": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click a partially obscured button": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click a rotated button": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > should fire contextmenu event on right click": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click a button in scrolling container with offset": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > should wait for becoming hit target": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > trial run should work with short timeout": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > trial run should not click": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-click.spec.ts > trial run should not double click": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should retry when element detaches after animation": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click the button when window.innerWidth is corrupted": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-dispatchevent.spec.ts > should dispatch click event @smoke": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-dispatchevent.spec.ts > should dispatch click after a cross origin navigation ": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-dispatchevent.spec.ts > should dispatch wheel event": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-dispatchevent.spec.ts > should dispatch device motion event": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-drag.spec.ts > Drag and drop > should work if the drag event is captured but not canceled": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-drag.spec.ts > Drag and drop > should work if a frame is stalled": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-evaluate.spec.ts > should work with CSP": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-evaluate.spec.ts > should work with overridden globalThis.Window/Document/Node": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-event-console.spec.ts > should not throw when there are console messages in detached iframes": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-event-popup.spec.ts > should work with noopener and url": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-event-popup.spec.ts > should work with clicking target=_blank": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-expose-function.spec.ts > exposeBindingHandle should not throw during navigation": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-fill.spec.ts > should fill textarea @smoke": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-fill.spec.ts > should fill input": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-fill.spec.ts > input event.composed should be true and cross shadow dom boundary - range": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-fill.spec.ts > should retry on readonly element": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-fill.spec.ts > should retry on invisible element": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-fill.spec.ts > should not throw when fill causes navigation": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-goto.spec.ts > should work cross-process": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-goto.spec.ts > should work when navigating to 404": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-goto.spec.ts > should return when navigation is committed if commit is specified": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-history.spec.ts > page.goBack should work with HistoryAPI": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-history.spec.ts > page.goBack should work for file urls": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-history.spec.ts > goBack/goForward should work with bfcache-able pages": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-history.spec.ts > page.reload should not resolve with same-document navigation": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-history.spec.ts > page.reload should work with cross-origin redirect": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-history.spec.ts > page.reload should work on a page with a hash at the end": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-keyboard.spec.ts > should type emoji into an iframe": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-keyboard.spec.ts > should be able to prevent selectAll": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-navigation.spec.ts > should work with cross-process _blank target": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-network-idle.spec.ts > should wait for networkidle from the popup": {
    "previous": "timedOut",
    "current": "failed"
  },
  "page/page-network-response.spec.ts > should return multiple header value": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-screenshot.spec.ts > page screenshot animations > should not capture css animations in shadow DOM": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-screenshot.spec.ts > page screenshot animations > should capture screenshots after layoutchanges in transitionend event": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-screenshot.spec.ts > page screenshot animations > should trigger particular events for css transitions": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-set-input-files.spec.ts > should upload large file with relative path": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-load-state.spec.ts > should resolve immediately if loaded": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-load-state.spec.ts > should throw for bad state": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-load-state.spec.ts > should work with clicking target=_blank": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-load-state.spec.ts > should work for frame": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-navigation.spec.ts > should work": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-navigation.spec.ts > should work with history.pushState()": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-navigation.spec.ts > should work with url match": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-navigation.spec.ts > should work for cross-process navigations": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-navigation.spec.ts > should work on frame": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-response.spec.ts > should work with no timeout": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-response.spec.ts > should work with re-rendered cached IMG elements": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-selector-1.spec.ts > page.waitForSelector is shortcut for main frame": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-selector-2.spec.ts > should support >> selector syntax": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-url.spec.ts > should work with commit": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-wait-for-url.spec.ts > should work with DOM history.back()/history.forward()": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-wait-for-url.spec.ts > should work with url match for same document navigations": {
    "previous": "passed",
    "current": "failed"
  },
  "page/selectors-css.spec.ts > should work for open shadow roots": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-css.spec.ts > should work with :has": {
    "previous": "passed",
    "current": "failed"
  },
  "page/selectors-react.spec.ts > react15 > should not crash when there is no match": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react15 > should exact match by props": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react15 > should work with react memo": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/selectors-react.spec.ts > react15 > should work with multiroot react after unmount": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react16 > should partially match by props": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react16 > should work with multiroot react": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react17 > should not crash when there is no match": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react17 > should exact match by props": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react17 > should partially match by props": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react18 > should work with multi-root elements (fragments)": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react18 > should compose": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react18 > should partially match by props": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react18 > should work with react memo": {
    "previous": "failed",
    "current": "passed"
  },
  "page/selectors-react.spec.ts > react18 > should work with multiroot react after unmount": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshots on multiple tracks": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for attribute change": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for child removal": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for child addition": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for prop change": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for cursor change": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for name change": {
    "current": "passed"
  },
  "page/page-aria-snapshot-ai.spec.ts > should create incremental snapshot for text change": {
    "current": "passed"
  }
}
{
  "library/browsercontext-basic.spec.ts > should not hang on promises after disabling javascript": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-cookies-third-party.spec.ts > save/load third party 'Partitioned;' cookies": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-cookies.spec.ts > should support requestStorageAccess": {
    "previous": "timedOut",
    "current": "failed"
  },
  "library/browsercontext-device.spec.ts > device > should work @smoke": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should support clicking": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should scroll to click": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should scroll twice when emulated": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should reset scroll top after a navigation": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should scroll to a precise position with mobile scale": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should emulate viewport and screen size": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-device.spec.ts > device > should emulate viewport without screen size": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-events.spec.ts > console event should work in popup 2": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-events.spec.ts > console event should work in immediately closed popup": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-events.spec.ts > dialog event should work in popup 2": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-network-event.spec.ts > should not fire events for favicon or favicon redirects": {
    "previous": "timedOut",
    "current": "passed"
  },
  "library/browsercontext-page-event.spec.ts > should work with Ctrl-clicking": {
    "previous": "passed",
    "current": "failed"
  },
  "library/browsercontext-pages.spec.ts > should click the button with offset with page scale": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-pages.spec.ts > should return bounding box with page scale": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-storage-state.spec.ts > should support IndexedDB": {
    "previous": "failed",
    "current": "passed"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support mobile emulation": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support touch emulation": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should be detectable": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should detect touch when applying viewport with touches": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support landscape emulation": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should support window.orientation emulation": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should fire orientationchange event": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > default mobile viewports to 980 width": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > respect meta viewport tag": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should emulate the hover media feature": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > mouse should work with mobile viewports and cross process navigations": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should scroll when emulating a mobile viewport": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > should scroll mobile page with background-attachment: fixed": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport-mobile.spec.ts > mobile viewport > view scale should reset after navigation": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsercontext-viewport.spec.ts > should set window.screen.orientation.type for mobile devices": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/browsertype-launch.spec.ts > should throw if page argument is passed": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/capabilities.spec.ts > should play video @smoke": {
    "previous": "timedOut",
    "current": "skipped"
  },
  "library/debug-controller.spec.ts > should pick element": {
    "previous": "passed",
    "current": "failed"
  },
  "library/debug-controller.spec.ts > should record": {
    "previous": "failed",
    "current": "passed"
  },
  "library/defaultbrowsercontext-2.spec.ts > should work in persistent context": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/defaultbrowsercontext-2.spec.ts > should throw if page argument is passed": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/defaultbrowsercontext-2.spec.ts > should have passed URL when launching with ignoreDefaultArgs: true": {
    "previous": "failed",
    "current": "timedOut"
  },
  "library/download.spec.ts > download event > should report alt-click downloads": {
    "previous": "timedOut",
    "current": "skipped"
  },
  "library/emulation-focus.spec.ts > should trigger hover state concurrently": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/har.spec.ts > should not hang on resources served from cache": {
    "previous": "passed",
    "current": "failed"
  },
  "library/headful.spec.ts > headless and headful should use same default fonts": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/resource-timing.spec.ts > should work when serving from memory cache": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/route-web-socket.spec.ts > no-mock > should work with error after successful open": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/route-web-socket.spec.ts > no-match > should work with error after successful open": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/route-web-socket.spec.ts > pass-through > should work with error after successful open": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/screenshot.spec.ts > page screenshot > should work with a mobile viewport": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/screenshot.spec.ts > page screenshot > should work with a mobile viewport and clip": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/screenshot.spec.ts > page screenshot > should work with a mobile viewport and fullPage": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/screenshot.spec.ts > page screenshot > should throw if screenshot size is too large with device scale factor": {
    "previous": "passed",
    "current": "failed"
  },
  "library/screenshot.spec.ts > element screenshot > element screenshot should work with a mobile viewport": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/screenshot.spec.ts > element screenshot > element screenshot should work with device scale factor": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/trace-viewer.spec.ts > should filter network requests by url": {
    "previous": "failed",
    "current": "passed"
  },
  "library/trace-viewer.spec.ts > should handle src=blob": {
    "previous": "failed",
    "current": "skipped"
  },
  "library/trace-viewer.spec.ts > should show only one pointer with multilevel iframes": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/expect-misc.spec.ts > strict mode violation error format": {
    "previous": "passed",
    "current": "failed"
  },
  "page/frame-goto.spec.ts > should continue after client redirect": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/frame-hierarchy.spec.ts > should refuse to display x-frame-options:deny iframe": {
    "previous": "timedOut",
    "current": "skipped"
  },
  "page/jshandle-to-string.spec.ts > should work with previewable subtypes": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/locator-frame.spec.ts > should work with COEP/COOP/CORP isolated iframe": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-add-init-script.spec.ts > init script should run only once in iframe": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-click.spec.ts > should click the aligned 1x1 div": {
    "previous": "timedOut",
    "current": "passed"
  },
  "page/page-click.spec.ts > should fire contextmenu event on right click in correct order": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-evaluate.spec.ts > should throw for too deep reference chain": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-event-console.spec.ts > should format the message correctly with time/timeLog/timeEnd": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-event-load.spec.ts > should fire once": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-event-load.spec.ts > should fire once with iframe navigation": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-fill.spec.ts > should fill contenteditable with new lines": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-fill.spec.ts > should not double-fill in contenteditable with beforeinput handler in Firefox": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-fill.spec.ts > should throw nice error without injected script stack when element is not an <input>": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-focus.spec.ts > should work @smoke": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-goto.spec.ts > should fail when replaced by another navigation": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-goto.spec.ts > should not resolve goto upon window.stop()": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-mouse.spec.ts > should pointerdown the div with a custom button": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-network-request.spec.ts > should get the same headers as the server": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-network-request.spec.ts > should not return allHeaders() until they are available": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-network-request.spec.ts > should get the same headers as the server CORS": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-network-request.spec.ts > should report raw headers": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-network-request.spec.ts > page.reload return 304 status code": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-network-response.spec.ts > should provide a Response with a file URL": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-network-sizes.spec.ts > should have the correct responseBodySize for chunked request": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-request-continue.spec.ts > should respect set-cookie in redirect response": {
    "previous": "timedOut",
    "current": "skipped"
  },
  "page/page-request-continue.spec.ts > continue should not propagate cookie override to redirects": {
    "previous": "timedOut",
    "current": "skipped"
  },
  "page/page-request-intercept.spec.ts > should intercept multipart/form-data request body": {
    "previous": "skipped",
    "current": "failed"
  },
  "page/page-screenshot.spec.ts > should throw if screenshot size is too large": {
    "previous": "passed",
    "current": "failed"
  },
  "page/page-screenshot.spec.ts > page screenshot > should capture blinking caret if explicitly asked for": {
    "previous": "failed",
    "current": "skipped"
  },
  "page/page-screenshot.spec.ts > page screenshot > should work for webgl": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/page-screenshot.spec.ts > page screenshot animations > should wait for fonts to load": {
    "previous": "failed",
    "current": "passed"
  },
  "page/page-set-content.spec.ts > should handle timeout properly": {
    "previous": "timedOut",
    "current": "skipped"
  },
  "page/page-wait-for-response.spec.ts > should work with re-rendered cached IMG elements": {
    "previous": "passed",
    "current": "skipped"
  },
  "page/wheel.spec.ts > should dispatch wheel events after context menu was opened": {
    "previous": "passed",
    "current": "skipped"
  },
  "library/beforeunload.spec.ts > should support dismissing the dialog multiple times": {
    "current": "passed"
  },
  "library/beforeunload.spec.ts > should support closing the page after a previous dismiss": {
    "current": "passed"
  },
  "library/beforeunload.spec.ts > should support closing the page via a subsequent onbeforeunload dialog": {
    "current": "passed"
  }
}